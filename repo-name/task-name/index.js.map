{"version":3,"file":"index.js","mappings":";;;;AAAA;AACe;AACf;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzE6C;AAC7C,8CAA8C,aAAa,GAAG,mCAAmC;AACjG,6CAA6C,aAAa,GAAG,kCAAkC;AAC/F,4CAA4C,aAAa,GAAG,iCAAiC;AAC7F,kCAAkC,aAAa,GAAG,oCAAoC;AACtF,2CAA2C,aAAa,GAAG,gCAAgC;AAC3F,+CAA+C,aAAa,GAAG,oCAAoC;AACnG,gCAAgC,aAAa,GAAG,kCAAkC;AAClF,MAAM,yBAAM,oCAAoC,aAAa,GAAG,qCAAqC;AACrG,iDAAiD,aAAa,GAAG,sCAAsC;AACvG,oCAAoC,aAAa,GAAG,sCAAsC;AAC1F,4CAA4C,aAAa,GAAG,iCAAiC;AAC7F,4CAA4C,aAAa,GAAG,iCAAiC;AAC7F,MAAM,2BAAQ,uBAAuB,aAAa,GAAG,uCAAuC;AAC5F,yDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ,CAAC,EAAC;;;AC5BF;AACA;AACuB;;;ACFgC;AACN;AACH;AAC/B,wBAAwB,aAAa;AACpD;AACA,gBAAgB,mBAAmB;AACnC,4BAA4B,kBAAG;AAC/B,sBAAsB,EAAW;AACjC;AACA,SAAS;AACT,0BAA0B,kBAAG;AAC7B,sBAAsB,EAAW;AACjC;AACA;AACA,SAAS;AACT,2BAA2B,kBAAG;AAC9B,sBAAsB,EAAW;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;;;ACtBA;AACA,IAAI,eAAE;AACiB;;;ACFgC;AACN;AACF;AAChC,qBAAqB,aAAa;AACjD;AACA,gBAAgB,mBAAmB;AACnC,4BAA4B,kBAAG;AAC/B,sBAAsB,eAAW;AACjC;AACA;AACA,SAAS;AACT,0BAA0B,kBAAG;AAC7B,sBAAsB,eAAW;AACjC;AACA;AACA,SAAS;AACT,2BAA2B,kBAAG;AAC9B,sBAAsB,eAAW;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;;;ACvBA;AACA,IAAI,gBAAE;AACiB;;;ACFgC;AACN;AACD;AACjC,sBAAsB,aAAa;AAClD;AACA,gBAAgB,mBAAmB;AACnC,4BAA4B,kBAAG;AAC/B,sBAAsB,gBAAW;AACjC;AACA;AACA,SAAS;AACT,0BAA0B,kBAAG;AAC7B,sBAAsB,gBAAW;AACjC;AACA;AACA,SAAS;AACT,2BAA2B,kBAAG;AAC9B,sBAAsB,gBAAW;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;;;ACvBO;AACP;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;;ACLxB;AACP;AACA;AACA;AACA;AACA,CAAC,oCAAoC;;;ACL9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;;ACPlB;AACP;AACA;AACA;AACA,CAAC,sDAAsD;;;ACJhD;AACP;AACA;AACA;AACA;AACA,CAAC,oDAAoD;;;ACLZ;AACM;AACb;AACgC;AACF;;;ACJQ;AACxE,6CAAe;AACf;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD,gCAAgC,qBAAqB;AACrD;AACA;AACA,CAAC,EAAC;;;ACTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAAe,OAAO,EAAC;;;AChB8B;AACrD,6BAA6B,qBAAO;AACpC;AACA,4DAAe,cAAc,EAAC;;;ACHgB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9C+B;AAC/B;AAC+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,2BAA2B,MAAM;AACjC,uBAAuB,MAAM;AAC7B,0BAA0B,MAAM;AAChC,qBAAqB,MAAM;AAC3B,wBAAwB,MAAM;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,mCAAmC;AACnC,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,oBAAoB,YAAY;AAChC,4DAAe,OAAO,EAAC;;;AClKvB;AACA,IAAI,aAAE;AACN;AACA;AACsD;;;ACJC;AACF;AACN;AACE;AACC;AACL;AACA;AAC9B,mBAAmB,aAAa;AAC/C,iBAAiB,MAAM;AACvB,kBAAkB,OAAO;AACzB,gBAAgB,SAAS;AACzB;AACA;AACA,gBAAgB,oBAAoB;AACpC,wBAAwB,kBAAG;AAC3B,sBAAsB,aAAc;AACpC;AACA,SAAS;AACT,6BAA6B,kBAAG,OAAO,UAAU,EAAW,GAAG;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe,EAAE,qBAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qEAAqE,wBAAwB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AAC7C;AACe;AACf,gCAAgC,CAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kBAAkB,YAAY,GAAG,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAO,gBAAgB,qBAAO;AAC/C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzF8B;AACW;AACI;AACf;AACf;AACf;AACA,eAAe,IAAI;AACnB;AACA,0BAA0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAO,gBAAgB,qBAAO;AACxD;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,0BAA0B,qBAAO,gBAAgB,qBAAO;AACxD;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;;ACnC4B;AAC5B,gBAAgB,GAAG;AACnB","sources":["webpack://async-race/./src/app/components/base-component.ts","webpack://async-race/./src/app/components/utility-components.ts","webpack://async-race/./src/app/components/error-page/error.module.scss?1414","webpack://async-race/./src/app/components/error-page/error.ts","webpack://async-race/./src/app/components/garage/garage.module.scss?65c9","webpack://async-race/./src/app/components/garage/garage.ts","webpack://async-race/./src/app/components/winners/winners.module.scss?cada","webpack://async-race/./src/app/components/winners/winners.ts","webpack://async-race/./src/app/models/enums/car-status.ts","webpack://async-race/./src/app/models/enums/endpoint-type.ts","webpack://async-race/./src/app/models/enums/method.ts","webpack://async-race/./src/app/models/enums/winners-order-parameter.ts","webpack://async-race/./src/app/models/enums/winners-sort-parameter.ts","webpack://async-race/./src/app/models/enums/index.ts","webpack://async-race/./src/app/config.ts","webpack://async-race/./src/app/utils/event-emitter-generic.ts","webpack://async-race/./src/app/state-machine/event-emitter-machine.ts","webpack://async-race/./src/app/state-machine/machine-class.ts","webpack://async-race/./src/app/state-machine/machine.ts","webpack://async-race/./src/app/components/page/page.module.scss?4822","webpack://async-race/./src/app/components/page/page.ts","webpack://async-race/./src/app/router.ts","webpack://async-race/./src/app/app.ts","webpack://async-race/./src/index.ts"],"sourcesContent":["const ZERO_LENGTH = 0;\nexport default class BaseComponent {\n    childComponents = [];\n    parentComponent = undefined;\n    element;\n    constructor(properties, ...children) {\n        const { elementTag, text, classes, ...rest } = properties;\n        this.element = document.createElement(elementTag);\n        if (children.length > ZERO_LENGTH) {\n            this.appendChildren(...children);\n        }\n        if (text) {\n            this.setText(text);\n        }\n        if (classes && classes.length > ZERO_LENGTH) {\n            this.addClasses(...classes);\n        }\n        Object.assign(this.element, rest);\n    }\n    appendChildren(...children) {\n        for (const child of children)\n            this.appendSingle(child);\n        return this;\n    }\n    appendSingle(child) {\n        this.element.append(child.getElement());\n        this.childComponents.push(child);\n        child.parentComponent = this;\n        return this;\n    }\n    getElement() {\n        return this.element;\n    }\n    removeSelf() {\n        this.removeChildren();\n        this.element.remove();\n        if (this.parentComponent) {\n            this.parentComponent.childComponents =\n                this.parentComponent.childComponents.filter((child) => child !== this);\n        }\n    }\n    removeChildren() {\n        for (const child of this.childComponents)\n            child.removeSelf();\n        this.childComponents.length = 0;\n        return this;\n    }\n    addClasses(...classes) {\n        this.element.classList.add(...classes);\n        return this;\n    }\n    removeClasses(...classes) {\n        this.element.classList.remove(...classes);\n        return this;\n    }\n    toggleClasses(...classes) {\n        for (const className of classes) {\n            this.element.classList.toggle(className);\n        }\n        return this;\n    }\n    setText(text) {\n        this.element.textContent = text;\n        return this;\n    }\n    addListener(eventType, handler, options) {\n        this.element.addEventListener(eventType, handler, options);\n        return this;\n    }\n    removeListener(eventType, handler) {\n        this.element.removeEventListener(eventType, handler);\n        return this;\n    }\n}\n","import BaseComponent from './base-component';\nconst span = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'span' }, ...children);\nconst div = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'div' }, ...children);\nconst h1 = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'h1' }, ...children);\nconst input = (properties) => new BaseComponent({ ...properties, elementTag: 'input' });\nconst a = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'a' }, ...children);\nconst label = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'label' }, ...children);\nconst img = (properties) => new BaseComponent({ ...properties, elementTag: 'img' });\nconst button = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'button' }, ...children);\nconst details = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'details' }, ...children);\nconst summary = (properties) => new BaseComponent({ ...properties, elementTag: 'summary' });\nconst ul = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'ul' }, ...children);\nconst li = (properties, ...children) => new BaseComponent({ ...properties, elementTag: 'li' }, ...children);\nconst textarea = (properties) => new BaseComponent({ ...properties, elementTag: 'textarea' });\nexport default {\n    span,\n    div,\n    h1,\n    input,\n    label,\n    a,\n    img,\n    button,\n    details,\n    summary,\n    ul,\n    li,\n    textarea,\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"zXeTI5z_\";\nexport { _1 as \"temp\" }\n","import BaseComponent from '@components/base-component';\nimport tag from '@components/utility-components';\nimport * as styles from './error.module.scss';\nexport default class ErrorPage extends BaseComponent {\n    constructor() {\n        super({ elementTag: 'div' });\n        const linkWinners = tag.div({\n            classes: [styles.temp],\n            text: \"Oh, you're not supposed to be here\",\n        });\n        const linkError = tag.a({\n            classes: [styles.temp],\n            text: 'go to garage',\n            href: '../',\n        });\n        const linkError2 = tag.a({\n            classes: [styles.temp],\n            text: 'go to winners',\n            href: '../winners',\n        });\n        this.appendChildren(linkWinners, linkError, linkError2);\n    }\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"ni5_1qJv\";\nexport { _1 as \"temp\" }\n","import BaseComponent from '@components/base-component';\nimport tag from '@components/utility-components';\nimport * as styles from './garage.module.scss';\nexport default class Garage extends BaseComponent {\n    constructor() {\n        super({ elementTag: 'div' });\n        const linkWinners = tag.a({\n            classes: [styles.temp],\n            text: 'link to winners',\n            href: './winners',\n        });\n        const linkError = tag.a({\n            classes: [styles.temp],\n            text: 'link to error page',\n            href: '../hello-error',\n        });\n        const linkError2 = tag.a({\n            classes: [styles.temp],\n            text: 'link 2 to error page',\n            href: './hello-error-2',\n        });\n        this.appendChildren(linkWinners, linkError, linkError2);\n    }\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"RFlbXUvE\";\nexport { _1 as \"temp\" }\n","import BaseComponent from '@components/base-component';\nimport tag from '@components/utility-components';\nimport * as styles from './winners.module.scss';\nexport default class Winners extends BaseComponent {\n    constructor() {\n        super({ elementTag: 'div' });\n        const linkWinners = tag.a({\n            classes: [styles.temp],\n            text: 'link to garage',\n            href: '../',\n        });\n        const linkError = tag.a({\n            classes: [styles.temp],\n            text: 'link to error page',\n            href: '../hello-error',\n        });\n        const linkError2 = tag.a({\n            classes: [styles.temp],\n            text: 'link 2 to error page',\n            href: './hello-error-2',\n        });\n        this.appendChildren(linkWinners, linkError, linkError2);\n    }\n}\n","export var CarStatus;\n(function (CarStatus) {\n    CarStatus[\"STARTED\"] = \"started\";\n    CarStatus[\"STOPPED\"] = \"stopped\";\n    CarStatus[\"DRIVE\"] = \"drive\";\n})(CarStatus || (CarStatus = {}));\n","export var EndpointType;\n(function (EndpointType) {\n    EndpointType[\"GARAGE\"] = \"garage\";\n    EndpointType[\"WINNERS\"] = \"winners\";\n    EndpointType[\"ENGINE\"] = \"engine\";\n})(EndpointType || (EndpointType = {}));\n","export var Method;\n(function (Method) {\n    Method[\"GET\"] = \"GET\";\n    Method[\"POST\"] = \"POST\";\n    Method[\"PUT\"] = \"PUT\";\n    Method[\"DELETE\"] = \"DELETE\";\n    Method[\"PATCH\"] = \"PATCH\";\n})(Method || (Method = {}));\n","export var WinnersOrderParameter;\n(function (WinnersOrderParameter) {\n    WinnersOrderParameter[\"ASC\"] = \"ASC\";\n    WinnersOrderParameter[\"DESC\"] = \"DESC\";\n})(WinnersOrderParameter || (WinnersOrderParameter = {}));\n","export var WinnersSortParameter;\n(function (WinnersSortParameter) {\n    WinnersSortParameter[\"ID\"] = \"id\";\n    WinnersSortParameter[\"WINS\"] = \"wins\";\n    WinnersSortParameter[\"TIME\"] = \"time\";\n})(WinnersSortParameter || (WinnersSortParameter = {}));\n","export { CarStatus } from './car-status';\nexport { EndpointType } from './endpoint-type';\nexport { Method } from './method';\nexport { WinnersOrderParameter } from './winners-order-parameter';\nexport { WinnersSortParameter } from './winners-sort-parameter';\n","import { WinnersOrderParameter, WinnersSortParameter } from '@ts-enums';\nexport default {\n    API_URL: 'http://localhost:3000/',\n    DEFAULT_WINNERS_PER_PAGE: 7,\n    DEFAULT_WINNERS_PAGE_NUMBER: 1,\n    DEFAULT_WINNERS_SORT_BY: WinnersSortParameter.TIME,\n    DEFAULT_WINNERS_SORT_ORDER: WinnersOrderParameter.ASC,\n    DEFAULT_CARS_PER_PAGE: 7,\n    DEFAULT_CARS_PAGE_NUMBER: 1,\n};\n","class Emitter {\n    events = {};\n    on(event, listener) {\n        if (!this.events[event]) {\n            this.events[event] = [];\n        }\n        this.events[event].push(listener);\n    }\n    emit(event, ...arguments_) {\n        if (this.events[event]) {\n            for (const listener of this.events[event]) {\n                listener(...arguments_);\n            }\n        }\n    }\n}\nexport default Emitter;\n","import Emitter from '../utils/event-emitter-generic';\nclass EmitterMachine extends Emitter {\n}\nexport default EmitterMachine;\n","import Emitter from './event-emitter-machine';\nexport class StateMachine {\n    value;\n    context;\n    events = {\n        machineStateChanged: 'machineStateChanged',\n    };\n    emitter = new Emitter();\n    definition;\n    constructor(stateMachineDefinition) {\n        this.definition = stateMachineDefinition;\n        this.value = stateMachineDefinition.initialState;\n        this.context = stateMachineDefinition.context;\n    }\n    async makeTransition(currentState, trigger, contextData) {\n        const currentStateDefinition = this.definition.states[currentState];\n        const destinationTransition = currentStateDefinition.transitions[trigger];\n        if (!destinationTransition)\n            return;\n        const destinationState = destinationTransition.target;\n        const destinationStateDefinition = this.definition.states[destinationState];\n        const payload = {\n            updateContext: this.updateContext.bind(this),\n            getFullContext: this.getFullContext.bind(this),\n            contextData,\n            trigger,\n        };\n        await destinationTransition.action?.(payload);\n        await currentStateDefinition.actions.onExit?.(payload);\n        await destinationStateDefinition.actions.onEnter?.(payload);\n        this.value = destinationState;\n        this.emit(this.events.machineStateChanged, payload);\n        return this.value;\n    }\n    updateContext(contextData) {\n        this.context = { ...this.context, ...contextData };\n    }\n    getFullContext() {\n        return this.context;\n    }\n    on(event, callback) {\n        this.emitter.on(event, callback);\n    }\n    emit(event, payload, ...other) {\n        this.emitter.emit(event, payload, ...other);\n    }\n}\n","import config from '../config';\n// import controller from '@controller/controller';\nimport { StateMachine } from './machine-class';\nconst stateMachineDefinition = {\n    initialState: 'state:initial',\n    context: {\n        cars: [],\n        winners: [],\n        currentRoute: '',\n        winnersPerPage: config.DEFAULT_WINNERS_PER_PAGE,\n        winnersPageNumber: config.DEFAULT_WINNERS_PAGE_NUMBER,\n        winnersSortBy: config.DEFAULT_WINNERS_SORT_BY,\n        winnersSortOrder: config.DEFAULT_WINNERS_SORT_ORDER,\n        carsPerPage: config.DEFAULT_CARS_PER_PAGE,\n        carsPageNumber: config.DEFAULT_CARS_PAGE_NUMBER,\n        isSoundEnabled: false,\n    },\n    states: {\n        'state:initial': {\n            actions: {\n                async onEnter() {\n                    await Promise.resolve();\n                    console.log('initial: onEnter');\n                },\n                async onExit() {\n                    await Promise.resolve();\n                    console.log('initial: onExit');\n                    // update context with cars, winners\n                },\n            },\n            transitions: {\n                navigateGarage: {\n                    target: 'state:garage',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n                navigateWinners: {\n                    target: 'state:winners',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n                navigateError: {\n                    target: 'state:404',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n            },\n        },\n        'state:garage': {\n            actions: {\n                async onEnter() { },\n                async onExit() { },\n            },\n            transitions: {\n                navigateWinners: {\n                    target: 'state:winners',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n                navigateError: {\n                    target: 'state:404',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n            },\n        },\n        'state:winners': {\n            actions: {\n                async onEnter() {\n                    await Promise.resolve();\n                    console.log('winners: onEnter');\n                },\n                async onExit() {\n                    await Promise.resolve();\n                    console.log('winners: onExit');\n                },\n            },\n            transitions: {\n                navigateGarage: {\n                    target: 'state:garage',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n                navigateError: {\n                    target: 'state:404',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n            },\n        },\n        'state:404': {\n            actions: {\n                async onEnter() {\n                    await Promise.resolve();\n                    console.log('404: onEnter');\n                },\n                async onExit() {\n                    await Promise.resolve();\n                    console.log('404: onExit');\n                },\n            },\n            transitions: {\n                navigateGarage: {\n                    target: 'state:garage',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n                navigateWinners: {\n                    target: 'state:winners',\n                    async action(payload) {\n                        await Promise.resolve();\n                        if (payload.contextData?.currentRoute) {\n                            const { contextData, updateContext } = payload;\n                            updateContext(contextData);\n                        }\n                    },\n                },\n            },\n        },\n    },\n};\nconst machine = new StateMachine(stateMachineDefinition);\nexport default machine;\n","// extracted by mini-css-extract-plugin\nvar _1 = \"teSzgQ6N\";\nvar _2 = \"dQDdLIr8\";\nvar _3 = \"C8Dn1lrC\";\nexport { _1 as \"heading\", _2 as \"main\", _3 as \"page\" }\n","import BaseComponent from '@components/base-component';\nimport ErrorPage from '@components/error-page/error';\nimport Garage from '@components/garage/garage';\nimport tag from '@components/utility-components';\nimport Winners from '@components/winners/winners';\nimport machine from '@state-machine/machine';\nimport * as styles from './page.module.scss';\nexport default class Page extends BaseComponent {\n    garage = new Garage();\n    winners = new Winners();\n    error = new ErrorPage();\n    pageContainer;\n    constructor() {\n        super({ elementTag: 'main' });\n        const heading = tag.h1({\n            classes: [styles.heading],\n            text: 'Welcome to Async Tractor Race',\n        });\n        this.pageContainer = tag.div({ classes: [styles.page] });\n        this.appendChildren(heading, this.pageContainer);\n    }\n    mount() {\n        this.handleRouteChange();\n        document.body.append(this.getElement());\n    }\n    handleRouteChange() {\n        const { currentRoute } = machine.getFullContext();\n        if (currentRoute === '')\n            this.changeContent(this.garage);\n        else if (currentRoute === 'winners')\n            this.changeContent(this.winners);\n        else\n            this.changeContent(this.error);\n    }\n    changeContent(newContent) {\n        this.pageContainer.getElement().replaceChildren(newContent.getElement());\n    }\n}\n","// import machine from '@state-machine/machine';\n// import type { RouteObject } from '@ts-types/route-object';\n// function getCurrentHref(): string {\n//   return globalThis.location.href;\n// }\n// function getCurrentPathname(): string {\n//   return globalThis.location.pathname;\n// }\n// export default class Router {\n//   constructor(private routeObjects: RouteObject[]) {\n//     globalThis.addEventListener('popstate', () => this.initialLoad());\n//   }\n//   public handleLink = (event: Event): void => {\n//     event.preventDefault();\n//     const { currentTarget } = event;\n//     if (currentTarget instanceof HTMLAnchorElement) {\n//       const currentHref = getCurrentHref();\n//       if (currentHref !== currentTarget.href) {\n//         this.navigate(currentTarget.href);\n//       }\n//     }\n//   };\n//   public initialLoad(): void {\n//     const currentPathname = getCurrentPathname();\n//     this.load(currentPathname);\n//   }\n//   public navigate(href: string): void {\n//     const url = new URL(href, globalThis.location.origin);\n//     globalThis.history.pushState({}, '', url);\n//     const pathname = url.pathname;\n//     this.load(pathname);\n//   }\n//   private load(pathname: string): void {\n//     const currentRouteObject = this.getCurrentRouteObj(pathname);\n//     if (currentRouteObject) {\n//       currentRouteObject.callback();\n//     } else {\n//       // machine.makeTransition(machine.value, 'navigateError', { currentRoute: pathname });\n//     }\n//   }\n//   private getCurrentRouteObj(pathname: string): RouteObject | undefined {\n//     const currentRouteObject = this.routeObjects.find((route) => route.pathname === pathname);\n//     if (!currentRouteObject) return;\n//     return currentRouteObject;\n//   }\n// }\nimport machine from '@state-machine/machine';\nconst ZERO_SEGMENTS_TO_KEEP = 0;\nexport default class Router {\n    pathSegmentsToKeep = Number(PATH_SEGMENTS_TO_KEEP);\n    routes;\n    constructor(routes) {\n        this.routes = routes;\n        document.addEventListener('DOMContentLoaded', () => {\n            const indexOffset = 1;\n            const currentPath = globalThis.location.pathname\n                .split('/')\n                .slice(this.pathSegmentsToKeep + indexOffset)\n                .join('/');\n            void this.navigate(currentPath);\n        });\n    }\n    navigate(url) {\n        const offset = 1;\n        const pathnameApp = globalThis.location.pathname\n            .split('/')\n            .slice(offset, this.pathSegmentsToKeep + offset)\n            .join('/');\n        globalThis.history.pushState({}, '', this.pathSegmentsToKeep > ZERO_SEGMENTS_TO_KEEP\n            ? `/${pathnameApp}/${url}`\n            : '');\n        const pathParts = url.split('/');\n        const zeroIndex = 0;\n        console.log(this.routes);\n        console.log(pathParts[zeroIndex]);\n        const route = this.routes.find((item) => item.pathname === pathParts[zeroIndex]);\n        console.log('route :>>', route);\n        if (route === undefined) {\n            console.log('catch');\n            // transition to error page\n            void machine.makeTransition(machine.value, 'navigateError', {\n                currentRoute: pathParts[zeroIndex],\n            });\n            console.log('no page');\n            return;\n        }\n        const pathAfterRepoAndApp = url.split('/');\n        void route.callback(pathAfterRepoAndApp[offset]);\n    }\n}\n","import './styles/global.scss';\nimport Page from '@components/page/page';\nimport machine from '@state-machine/machine';\nimport Router from './router';\nexport default class App {\n    router;\n    page = new Page();\n    constructor() {\n        this.router = new Router(this.getRouteObjects());\n        // this.page = new Page(machine, this.router.handleLink);\n    }\n    init() {\n        this.page.mount();\n        // this.router.initialLoad();\n    }\n    getRouteObjects() {\n        return [\n            {\n                pathname: '',\n                callback: async () => {\n                    await machine.makeTransition(machine.value, 'navigateGarage', {\n                        currentRoute: '',\n                    });\n                },\n            },\n            {\n                pathname: 'winners',\n                callback: async () => {\n                    await machine.makeTransition(machine.value, 'navigatePicker', {\n                        currentRoute: 'winners',\n                    });\n                },\n            },\n        ];\n    }\n}\n","import App from './app/app';\nconst app = new App();\napp.init();\n"],"names":[],"sourceRoot":""}